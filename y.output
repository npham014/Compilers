Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start output

    3 output: exp EQU ENDL

    4 exp: INTNUM
    5    | exp PLUS exp
    6    | exp MINUS exp
    7    | exp MULT exp
    8    | exp DIV exp
    9    | L_PAREN exp R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
INTNUM (258) 4
PLUS (259) 5
EQU (260) 3
ENDL (261) 3
MULT (262) 7
DIV (263) 8
L_PAREN (264) 9
R_PAREN (265) 9
MINUS (266) 6


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
start (13)
    on left: 1 2, on right: 0 2
output (14)
    on left: 3, on right: 2
exp (15)
    on left: 4 5 6 7 8 9, on right: 3 5 6 7 8 9


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . output

    $end     shift, and go to state 2
    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    output  go to state 5
    exp     go to state 6


State 2

    0 $accept: start $end .

    $default  accept


State 3

    4 exp: INTNUM .

    $default  reduce using rule 4 (exp)


State 4

    9 exp: L_PAREN . exp R_PAREN

    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    exp  go to state 7


State 5

    2 start: start output .

    $default  reduce using rule 2 (start)


State 6

    3 output: exp . EQU ENDL
    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . MULT exp
    8    | exp . DIV exp

    PLUS   shift, and go to state 8
    EQU    shift, and go to state 9
    MULT   shift, and go to state 10
    DIV    shift, and go to state 11
    MINUS  shift, and go to state 12


State 7

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . MULT exp
    8    | exp . DIV exp
    9    | L_PAREN exp . R_PAREN

    PLUS     shift, and go to state 8
    MULT     shift, and go to state 10
    DIV      shift, and go to state 11
    R_PAREN  shift, and go to state 13
    MINUS    shift, and go to state 12


State 8

    5 exp: exp PLUS . exp

    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    exp  go to state 14


State 9

    3 output: exp EQU . ENDL

    ENDL  shift, and go to state 15


State 10

    7 exp: exp MULT . exp

    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    exp  go to state 16


State 11

    8 exp: exp DIV . exp

    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    exp  go to state 17


State 12

    6 exp: exp MINUS . exp

    INTNUM   shift, and go to state 3
    L_PAREN  shift, and go to state 4

    exp  go to state 18


State 13

    9 exp: L_PAREN exp R_PAREN .

    $default  reduce using rule 9 (exp)


State 14

    5 exp: exp . PLUS exp
    5    | exp PLUS exp .
    6    | exp . MINUS exp
    7    | exp . MULT exp
    8    | exp . DIV exp

    MULT  shift, and go to state 10
    DIV   shift, and go to state 11

    $default  reduce using rule 5 (exp)


State 15

    3 output: exp EQU ENDL .

    $default  reduce using rule 3 (output)


State 16

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . MULT exp
    7    | exp MULT exp .
    8    | exp . DIV exp

    $default  reduce using rule 7 (exp)


State 17

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . MULT exp
    8    | exp . DIV exp
    8    | exp DIV exp .

    $default  reduce using rule 8 (exp)


State 18

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    6    | exp MINUS exp .
    7    | exp . MULT exp
    8    | exp . DIV exp

    MULT  shift, and go to state 10
    DIV   shift, and go to state 11

    $default  reduce using rule 6 (exp)
